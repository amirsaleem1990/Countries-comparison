matching$Primary_key <- duplicated_new$Primary_key
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
matching <-  duplicated_new == duplicated_old
dim(matching)
names(matching) <- names(duplicated_new)
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  duplicated_new == duplicated_old
matching$Primary_key <- duplicated_new$Primary_key
mean(duplicated_new$Primary_key)
unique(duplicated_new$Primary_key)
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  duplicated_new == duplicated_old
# names(matching) <- names(duplicated_new)
matching$Primary_key <- as.array(duplicated_new$Primary_key)
matching
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  duplicated_new == duplicated_old
as.array(duplicated_new$Primary_key)
length(as.array(duplicated_new$Primary_key))
matching$Primary_key <- as.array(duplicated_new$Primary_key)
matching
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
matching <-  duplicated_new == duplicated_old
dim(matching)
duplicated_new$Primary_key
a = duplicated_new$Primary_key
a
x = matching
View(head(matching))
duplicated_new$Primary_key
class(duplicated_new$Primary_key)
x$Primary_key = duplicated_new$Primary_key
matching
x$Primary_key = as.integer(duplicated_new$Primary_key)
min(duplicated_new$Primary_key)
max(duplicated_new$Primary_key)
!is.na(duplicated_new$Primary_key)
is.na(duplicated_new$Primary_key)
sum(is.na(duplicated_new$Primary_key))
duplicated_new$Primary_key[order(duplicated_new$Primary_key)]]
duplicated_new$Primary_key[order(duplicated_new$Primary_key), ]]
duplicated_new$Primary_key[order(duplicated_new$Primary_key)],]
duplicated_new$Primary_key[order(duplicated_new$Primary_key),]]
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  duplicated_new == duplicated_old
dim(matching)
dimt(in_both_new_and_old)
dim(in_both_new_and_old)
dim(duplicated_new)
dim(duplicated_old)
x$ppprimary_key = duplicated_new$Primary_key
x['Primary_key'] = duplicated_new$Primary_key
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  duplicated_new == duplicated_old
matching$Primary_key = duplicated_new$Primary_key
names(matching) <- names(duplicated_new)
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  duplicated_new == duplicated_old
matching$primary_key = duplicated_new$Primary_key
names(matching) <- names(duplicated_new)
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  duplicated_new == duplicated_old
matching$primary_key = duplicated_new$Primary_key
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  duplicated_new == duplicated_old
matching$primary_key
matching
names(matching)
dim(matching)
class(matching)
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  data.frame(duplicated_new == duplicated_old)
# matching$Primary_key = duplicated_new$Primary_key
names(matching) <- names(duplicated_new)
class(matching)
dim(matching)
View(matching)
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
matching <-  cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,data.frame(duplicated_new == duplicated_old))
# matching$Primary_key = duplicated_new$Primary_key
names(matching) <- names(duplicated_new)
View(matching)
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
matching <-  cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,data.frame(duplicated_new == duplicated_old))
matching$Primary_key = duplicated_new$Primary_key
names(matching) <- names(duplicated_new)
f <- function(){
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
matching <-  cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,data.frame(duplicated_new == duplicated_old))
matching$Primary_key = duplicated_new$Primary_key
names(matching) <- names(duplicated_new)
View(matching)
write.csv(in_both_new_and_old, 'in_both_new_and_old.csv')
system("gopen in_both_new_and_old.csv", intern = T)
}
f()
f <- function(){
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  data.frame(duplicated_new == duplicated_old)
matching$Primary_key = duplicated_new$Primary_key
# names(matching) <- names(duplicated_new)
View(matching)
write.csv(in_both_new_and_old, 'in_both_new_and_old.csv')
system("geo open in_both_new_and_old.csv", intern = T)
}
f <- function(){
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  data.frame(duplicated_new == duplicated_old)
matching$Primary_key = duplicated_new$Primary_key
# names(matching) <- names(duplicated_new)
View(matching)
write.csv(in_both_new_and_old, 'in_both_new_and_old.csv')
system("geo open in_both_new_and_old.csv", intern = T)
}
f()
"12 Months" == "12 months"
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  data.frame(duplicated_new == duplicated_old)
matching$Primary_key = duplicated_new$Primary_key
for (i in names(matching)){
matching[, matching[, i]] <- toupper(matching[,i])
}
# names(matching) <- names(duplicated_new)
View(matching)
write.csv(in_both_new_and_old, 'in_both_new_and_old.csv')
toupper(matching$LoanTenor)
matching$LoanTenor
old_primary_keys <- data[data$DataType == "Old", ]$Primary_key
new_primary_keys <- data[data$DataType == "New", ]$Primary_key
in_both_new_and_old <- data[data$Primary_key %in% old_primary_keys & data$Primary_key %in% new_primary_keys,]
print(in_both_new_and_old %>% group_by(DataType) %>% count())
cat("There is ", nrow(in_both_new_and_old)/2, " Primary keys, which is in both New and Old groups")
write.csv(in_both_new_and_old, 'in_both_new_and_old.csv');ldkf
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
drop <- c("DataType")
data <- data[, !(names(data) %in% drop)]
merged <- merge(duplicated_old, duplicated_new, by = names(data))
cat("We have ", nrow(merged), " rows in our data than have only changings in DataType coulumn, all else same")
class(data)
library(readxl)
library(dplyr)
# since there is more than one sheet in our file and our intrest not in first sheet; we have to cpecify sheet.
sheet_name <- "Sheet1"
data <- read_excel("data.xlsx", sheet = sheet_name)
data <- data.frame(data)
# adding Primary_key column, by murgin 2 existing columns
data['Primary_key'] <- paste(as.character(data$applicationnumber), as.character(data$loantype), sep="")
# count of <DataType>
count(data, DataType)
# srif 1 esi row h jis me <DataType> and <Primary_key> dono same hen.
data %>% count(DataType, Primary_key) %>% filter(n > 1)
old_primary_keys <- data[data$DataType == "Old", ]$Primary_key
new_primary_keys <- data[data$DataType == "New", ]$Primary_key
in_both_new_and_old <- data[data$Primary_key %in% old_primary_keys & data$Primary_key %in% new_primary_keys,]
print(in_both_new_and_old %>% group_by(DataType) %>% count())
cat("There is ", nrow(in_both_new_and_old)/2, " Primary keys, which is in both New and Old groups")
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
drop <- c("DataType")
data <- data[, !(names(data) %in% drop)]
merged <- merge(duplicated_old, duplicated_new, by = names(data))
cat("We have ", nrow(merged), " rows in our data than have only changings in DataType coulumn, all else same")
in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
matching <-  data.frame(duplicated_new == duplicated_old)
matching$Primary_key = duplicated_new$Primary_key
dim(matching)
class(matching)
for (i in names(matching)){
matching[, i] <- toupper(matching[,i])
}
matching
View(matching)
View(matching)
library(readxl)
library(dplyr)
# since there is more than one sheet in our file and our intrest not in first sheet; we have to cpecify sheet.
sheet_name <- "Sheet1"
data <- read_excel("data.xlsx", sheet = sheet_name)
data <- data.frame(data)
for (i in names(data)){
data[, data[, i]] <- toupper(data[,i])
}
# adding Primary_key column, by murgin 2 existing columns
data['Primary_key'] <- paste(as.character(data$applicationnumber), as.character(data$loantype), sep="")
dim(data)
View(head(data))
library(readxl)
library(dplyr)
# since there is more than one sheet in our file and our intrest not in first sheet; we have to cpecify sheet.
sheet_name <- "Sheet1"
data <- read_excel("data.xlsx", sheet = sheet_name)
data <- data.frame(data)
for (i in names(data)){
data[, data[, i]] <- toupper(data[,i])
}
# adding Primary_key column, by murgin 2 existing columns
data['Primary_key'] <- paste(as.character(data$applicationnumber), as.character(data$loantype), sep="")
# count of <DataType>
count(data, DataType)
# srif 1 esi row h jis me <DataType> and <Primary_key> dono same hen.
data %>% count(DataType, Primary_key) %>% filter(n > 1)
# -----------------------------------------------
# Q1- There is a column for data type which includes only two values i.e. new and old. Please check if there are any loans in new data which also exist in old data. The key for the data is application ID and loan ID i.e. application ID + loan ID is your primary key.
# Only duplicates
old_primary_keys <- data[data$DataType == "Old", ]$Primary_key
new_primary_keys <- data[data$DataType == "New", ]$Primary_key
in_both_new_and_old <- data[data$Primary_key %in% old_primary_keys & data$Primary_key %in% new_primary_keys,]
print(in_both_new_and_old %>% group_by(DataType) %>% count())
cat("There is ", nrow(in_both_new_and_old)/2, " Primary keys, which is in both New and Old groups")
# -----------------------------------------------
# Q.2-  For any repeated loans, please check if the data in other columns is also the same
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
drop <- c("DataType")
data <- data[, !(names(data) %in% drop)]
merged <- merge(duplicated_old, duplicated_new, by = names(data))
cat("We have ", nrow(merged), " rows in our data than have only changings in DataType coulumn, all else same")
matching <-  data.frame(duplicated_new == duplicated_old)
matching$Primary_key = duplicated_new$Primary_key
# names(matching) <- names(duplicated_new)
View(matching)
write.csv(in_both_new_and_old, 'in_both_new_and_old.csv')
toupper("12 months")
toupper(c("12 months", "12 months"))
tolower(c("12 months"))
tolower(c("12 months", "12 months"))
View(head(data))
library(readxl)
library(dplyr)
# since there is more than one sheet in our file and our intrest not in first sheet; we have to cpecify sheet.
sheet_name <- "Sheet1"
data <- read_excel("data.xlsx", sheet = sheet_name)
data <- data.frame(data)
for (i in names(data)){
data[, data[, i]] <- toupper(data[,i])
}
# adding Primary_key column, by murgin 2 existing columns
data['Primary_key'] <- paste(as.character(data$applicationnumber), as.character(data$loantype), sep="")
# count of <DataType>
count(data, DataType)
# srif 1 esi row h jis me <DataType> and <Primary_key> dono same hen.
data %>% count(DataType, Primary_key) %>% filter(n > 1)
# -----------------------------------------------
# Q1- There is a column for data type which includes only two values i.e. new and old. Please check if there are any loans in new data which also exist in old data. The key for the data is application ID and loan ID i.e. application ID + loan ID is your primary key.
# Only duplicates
old_primary_keys <- data[data$DataType == "Old", ]$Primary_key
new_primary_keys <- data[data$DataType == "New", ]$Primary_key
in_both_new_and_old <- data[data$Primary_key %in% old_primary_keys & data$Primary_key %in% new_primary_keys,]
print(in_both_new_and_old %>% group_by(DataType) %>% count())
cat("There is ", nrow(in_both_new_and_old)/2, " Primary keys, which is in both New and Old groups")
# -----------------------------------------------
# Q.2-  For any repeated loans, please check if the data in other columns is also the same
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
drop <- c("DataType")
data <- data[, !(names(data) %in% drop)]
merged <- merge(duplicated_old, duplicated_new, by = names(data))
cat("We have ", nrow(merged), " rows in our data than have only changings in DataType coulumn, all else same")
#-----------------------------
#in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  data.frame(duplicated_new == duplicated_old)
matching$Primary_key = duplicated_new$Primary_key
# names(matching) <- names(duplicated_new)
View(matching)
write.csv(in_both_new_and_old, 'in_both_new_and_old.csv')
# library(data.table)
# dt[duplicated(dt), country]
for (i in names(matching)) {
print(sum(matching[, i]))
}
for (i in names(matching)) {
cat(i, "\t", sum(matching[, i]))
}
for (i in names(matching)) {
cat(i, "\t", sum(matching[, i]), "\n")
}
df = data.frame()
for (i in names(matching)) {
df <- rbind(i, sum(matching[, i]), sum(matching[, i])/nrow(matching))
}
# dt[duplicated(dt), country]
df
df = data.frame()
for (i in names(matching)) {
df <- rbind(df, c(i, sum(matching[, i]), sum(matching[, i])/nrow(matching)))
}
df
df = data.frame()
for (i in names(matching)) {
df <- rbind(df, c(i, sum(matching[, i], na.rm = T), sum(matching[, i])/nrow(matching)))
}
df
df = data.frame()
for (i in names(matching)) {
cat(i, sum(matching[, i]), sum(matching[, i])/nrow(matching))
}
for (i in names(matching)) {
cat(i, sum(matching[, i]), sum(matching[, i])/nrow(matching), "\n")
}
for (i in names(matching)) {
cat(i, sum(matching[, i], na.rm = T), sum(matching[, i], na.rm = T)/nrow(matching), "\n")
}
df<-data.frame("hi","bye")
names(df)<-c("hello","goodbye")
de<-data.frame("hola","ciao")
names(de)<-c("hello","goodbye")
newdf <- rbind(df, de)
newdf
df<-data.frame("hi","bye")
names(df)<-c("hello","goodbye")
de<-data.frame("hola","ciao")
newdf <- rbind(df, de)
newdf
df = data.frame()
l = c()
for (i in names(matching)) {
l <- append(l, c(i, sum(matching[, i], na.rm = T), sum(matching[, i], na.rm = T)/nrow(matching)))
}
length(l)
l[0]
l[1]
l[2]
l[3]
length(l)
84/29
84/30
84/28
matrix(l, byrow = T, ncol = 28)
data.frame(matrix(l, byrow = T, ncol = 28))
View(data.frame(matrix(l, byrow = T, ncol = 28)))
View(data.frame(matrix(l, byrow = F, ncol = 3)))
View(data.frame(matrix(l, byrow = T, ncol = 3)))
l = c()
for (i in names(matching)) {
l <- append(l, c(i, sum(matching[, i], na.rm = T), sum(matching[, i], na.rm = T)/nrow(matching)))
}
df = data.frame(matrix(l, byrow = T, ncol = 3))
View(df)
nrow(in_both_new_and_old)
nrow(in_both_new_and_old) / 2
q()
getwd()
dir.list()
list.dirs()
dirname()
dirname()
system("nautilus .", intern = T)
q()
library(readxl)
library(dplyr)
# since there is more than one sheet in our file and our intrest not in first sheet; we have to cpecify sheet.
sheet_name <- "Sheet1"
data <- read_excel("data.xlsx", sheet = sheet_name)
data <- data.frame(data)
for (i in names(data)){
data[, data[, i]] <- toupper(data[,i])
}
# adding Primary_key column, by murgin 2 existing columns
data['Primary_key'] <- paste(as.character(data$applicationnumber), as.character(data$loantype), sep="")
# count of <DataType>
count(data, DataType)
# srif 1 esi row h jis me <DataType> and <Primary_key> dono same hen.
data %>% count(DataType, Primary_key) %>% filter(n > 1)
# -----------------------------------------------
# Q1- There is a column for data type which includes only two values i.e. new and old. Please check if there are any loans in new data which also exist in old data. The key for the data is application ID and loan ID i.e. application ID + loan ID is your primary key.
# Only duplicates
old_primary_keys <- data[data$DataType == "Old", ]$Primary_key
new_primary_keys <- data[data$DataType == "New", ]$Primary_key
in_both_new_and_old <- data[data$Primary_key %in% old_primary_keys & data$Primary_key %in% new_primary_keys,]
print(in_both_new_and_old %>% group_by(DataType) %>% count())
cat("There is ", nrow(in_both_new_and_old)/2, " Primary keys, which is in both New and Old groups")
# -----------------------------------------------
# Q.2-  For any repeated loans, please check if the data in other columns is also the same
duplicated_old <- in_both_new_and_old[in_both_new_and_old$DataType == "Old", ]
duplicated_old <- duplicated_old[order(duplicated_old$Primary_key),]
duplicated_new <- in_both_new_and_old[in_both_new_and_old$DataType == "New", ]
duplicated_new <- duplicated_new[order(duplicated_new$Primary_key),]
drop <- c("DataType")
data <- data[, !(names(data) %in% drop)]
merged <- merge(duplicated_old, duplicated_new, by = names(data))
cat("We have ", nrow(merged), " rows in our data than have only changings in DataType coulumn, all else same")
#-----------------------------
#in_both_new_and_old <- in_both_new_and_old[order(in_both_new_and_old$Primary_key),]
# cbind(duplicated_old[order(duplicated_old$Primary_key),]$Primary_key,
matching <-  data.frame(duplicated_new == duplicated_old)
matching$Primary_key = duplicated_new$Primary_key
# names(matching) <- names(duplicated_new)
View(matching)
write.csv(in_both_new_and_old, 'in_both_new_and_old.csv')
# ratio_of_same_entry_both_time
l = c()
for (i in names(matching)) {
l <- append(l, c(i, sum(matching[, i], na.rm = T), sum(matching[, i], na.rm = T)/nrow(matching)))
}
ratio_of_same_entry_both_time = data.frame(matrix(l, byrow = T, ncol = 3))
ratio_of_same_entry_both_time
l2 = c()
for (i in names(matching)) {
l2 <- append(l2, c(i, sum(matching[, i], na.rm = T), mean(matching[, i], na.rm = T)))
}
ratio_of_same_entry_both_time2 = data.frame(matrix(l2, byrow = T, ncol = 3))
ratio_of_same_entry_both_time2
ratio_of_same_entry_both_time2 == ratio_of_same_entry_both_time
dim(ratio_of_same_entry_both_time)
dim(ratio_of_same_entry_both_time2)
ratio_of_same_entry_both_time == ratio_of_same_entry_both_time2
class(ratio_of_same_entry_both_time)
sum(ratio_of_same_entry_both_time$X1 == ratio_of_same_entry_both_time2$X1)
sum(ratio_of_same_entry_both_time$X2 == ratio_of_same_entry_both_time2$X2)
sum(ratio_of_same_entry_both_time$X3 == ratio_of_same_entry_both_time2$X3)
sum(ratio_of_same_entry_both_time$X3[1:14] == ratio_of_same_entry_both_time2$X3[1:14])
ratio_of_same_entry_both_time[1:14, ] == ratio_of_same_entry_both_time2[1:14,]
l = c()
for (i in names(matching)) {
l <- append(l, c(i, sum(matching[, i], na.rm = T), mean(matching[, i], na.rm = T)))
}
ratio_of_same_entry_both_time = data.frame(matrix(l, byrow = T, ncol = 3))
ratio_of_same_entry_both_time
dim(readRDS(file = "data.rds"))
df <- readRDS(file = "data.rds")
names(df)
unique(head(df$applicationnumber))
q()
library(readxl)
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(tidyverse)
data <- readRDS(file = "data.rds")
data$LoanTenor <- tolower(data$LoanTenor)
# adding Primary_key column, by murgin 2 existing columns
data['Primary_key'] <- paste(as.character(data$applicationnumber), as.character(data$loantype), sep="")
