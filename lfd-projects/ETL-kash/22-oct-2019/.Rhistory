getwd()
library(DBI)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
dbListFields(con, "ETL")
con <- dbConnect(RSQLite::SQLite(), "ETL")
dbListFields(con, "ETL")
dbListFields(con, "call_log")
con <- dbConnect(RSQLite::SQLite(), "ETL.db")
dbListFields(con, "call_log")
dbReadTable(con, "call_log")
getwd()
exit
q()
library(DBI)
# connect to database
con <- dbConnect(RSQLite::SQLite(), "ETL.db")
# variables names
dbListFields(con, "call_log")
# dataframe
dbReadTable(con, "call_log")
# connect to database
con <- dbConnect(RSQLite::SQLite(), "ETL.db")
DBI::dbColumnInfo()
DBI::dbListTables()
DBI::dbListTables(con)
library(dict)
library(hash)
library(hash)
h <- hash()
tables <- dbListTables(con)
tables
for (i in tables){
h[[i]] <- dbReadTable(con, i)
}
h
keys(h)
h[['sms_log']]
class(h[['sms_log']])
length(h)
keys(h)
for (i in keys(h)){
paste(i, dim(h[[i]]))
}
for (i in keys(h)){
cat(i, dim(h[[i]]))
}
for (i in keys(h)){
print(paste((i, dim(h[[i]])))
}
for (i in keys(h)){
print(paste((i, dim(h[[i]]))))
}
for (i in keys(h)){
print(paste(i, dim(h[[i]])))
}
h[['accounts_list']]
View(h[['accounts_list']])
keys(h)
h[['call_log']]
ls
eval(3)
eval("3")
eval("3", expr = T)
expression("4")
eval(expression("4"))
eval("4")
eval("4") <- 4
keys(h)
rm(list = ls())
library(DBI)
# connect to database
con <- dbConnect(RSQLite::SQLite(), "ETL.db")
tables <- dbListTables(con)
# variables names
dbListFields(con, "call_log")
# dataframe
dbReadTable(con, "call_log")
accounts_list  <- dbReadTable(con, "accounts_list")
app_install_log  <- dbReadTable(con, "app_install_log")
calendar_events <- dbReadTable(con, "calendar_events")
call_log <- dbReadTable(con, "call_log")
contacts_list  <- dbReadTable(con, "contacts_list")
ext_storage_files <- dbReadTable(con, "ext_storage_files")
filter_app_log <- dbReadTable(con, "filter_app_log")
location <- dbReadTable(con, "location")
outgoing_call_log <- dbReadTable(con, "outgoing_call_log")
sms_log  <- dbReadTable(con, "sms_log")
sms_sent_log <- dbReadTable(con, "sms_sent_log")
hist(accounts_list)
barplot(accounts_list$name)
barplot(accounts_list$X.type)
accounts_list
str(accounts_list)
barplot(accounts_list$ID)
barplot(table(accounts_list$ID))
barplot(table(accounts_list$name))
barplot(table(accounts_list$X.type))
barplot(table(accounts_list$name))
barplot(table(accounts_list$X.type))
?barplot
barplot(table(accounts_list$name), angle = 90)
barplot(table(accounts_list$name), angle = 180)
barplot(table(accounts_list$name), angle = 45)
?barplot
x <- barplot(table(accounts_list$name), xaxt="n")
labs <- paste(names(table(accounts_list$name)), "cylinders")
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45)
x
x <- barplot(table(accounts_list$name))
labs <- paste(names(table(accounts_list$name)), "cylinders")
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45)
x
x <- barplot(table(accounts_list$name))
x
accounts_list$name
barplot(table(accounts_list$name),
angle = 45,
main= "Accounts_list",
xlab= "Name",
las=2)
Name
barplot(table(accounts_list$name),
angle = 45,
main= "Accounts_list",
xlab= "Name",
las=2)
barplot(table(accounts_list$X.type),
angle = 45,
main= "Accounts_list",
xlab= "Name",
las=2)
barplot(table(accounts_list$X.type),
main= "Accounts_list",
xlab= "Name",
las=2)
barplot(table(accounts_list$X.type),
main= "Accounts_list",
xlab= "Name",
las=3)
barplot(table(accounts_list$X.type),
main= "Accounts_list",
xlab= "Name",
las=1)
barplot(table(accounts_list$X.type),
main= "Accounts_list",
xlab= "Name",
las=2)
accounts_list
barplot(table(accounts_list$name),
main= "Accounts_list",
xlab= "Name",
las=2)
paste(accounts_list$name, accounts_list$X.type)
accounts_list
library(DBI)
# connect to database
con <- dbConnect(RSQLite::SQLite(), "ETL.db")
tables <- dbListTables(con)
# variables names
dbListFields(con, "call_log")
# dataframe
dbReadTable(con, "call_log")
# variables names
dbListFields(con, "call_log")
getwd()
q()
